version: '3.8'

services:


#Same for this...
  # postgres:
  #   image: postgres:15-alpine
  #   env_file:
  #     - .env
  #   ports:
  #     - "5432:5432"
  #   volumes:
  #     - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"


# I don't need this since i'am using it on cloud...
  # qdrant:
  #   image: qdrant/qdrant
  #   ports:
  #     - "6333:6333"

  backend:
    build: ./backend
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
    env_file:
    - .env
    depends_on:
    - postgres
    - redis
    - qdrant
    # environment:
    #   - DATABASE_URL=postgresql://catalyst_user:catalyst_password@postgres:5432/catalyst_ai
    #   - REDIS_URL=redis://redis:6379
    #   - QDRANT_URL=http://qdrant:6333
    #   - GEMINI_API_KEY=your-gemini-api-key
    #   - UPLOAD_DIR=/app/uploads

  celery_worker:
    build: ./backend
    command: celery -A celery_app.celery worker --loglevel=info
    volumes:
      - ./backend:/app
    env_file:
      - .env
    depends_on:
      - backend
      - redis
    # environment:
    #   - DATABASE_URL=postgresql://catalyst_user:catalyst_password@postgres:5432/catalyst_ai
    #   - REDIS_URL=redis://redis:6379
    #   - QDRANT_URL=http://qdrant:6333
    #   - GEMINI_API_KEY=your-gemini-api-key
    #   - UPLOAD_DIR=/app/uploads

  flower:
    container_name: flower
    build: ./backend
    command: celery -A celery_app.celery flower --port=5555
    ports:
      -5556:5555
    env_file:
      - .env
    depends_on:
      - backend
      - celery_worker

  frontend:
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules 
    env_file:
    - .env

volumes:
  postgres_data:
